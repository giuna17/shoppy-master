rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write only their own recently viewed products
    match /recentlyViewed/{userId}/products/{productId} {
      // Allow read and write if the user is authenticated and the document belongs to them
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Additional validation for write operations
      allow create: if request.auth != null && 
                   request.auth.uid == userId && 
                   request.resource.data.keys().hasAll(['productId', 'timestamp']) &&
                   request.resource.data.timestamp is number &&
                   request.resource.data.timestamp > 0;
      
      allow update: if request.auth != null && 
                   request.auth.uid == userId && 
                   (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isFavorite']) ||
                    request.resource.data.diff(resource.data).affectedKeys().hasOnly(['timestamp']) ||
                    request.resource.data.diff(resource.data).affectedKeys().hasOnly(['viewCount']));
      
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Deny all other operations by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
